$date
	Sun Nov  1 19:48:40 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_test $end
$var wire 11 ! dout [10:0] $end
$var reg 1 " clk $end
$var reg 64 # din [63:0] $end
$var integer 32 $ i [31:0] $end
$scope module adder_tree $end
$var wire 1 " clk $end
$var wire 64 % din [63:0] $end
$var wire 11 & dout [10:0] $end
$scope begin genblk2 $end
$var wire 36 ' result [35:0] $end
$scope module add_pairs_inst $end
$var wire 1 " clk $end
$var wire 64 ( din [63:0] $end
$var wire 36 ) dout [35:0] $end
$scope begin genblk1[0] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 8 * din_a [7:0] $end
$var wire 8 + din_b [7:0] $end
$var wire 9 , dout [8:0] $end
$var reg 9 - dout_r [8:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 8 . din_a [7:0] $end
$var wire 8 / din_b [7:0] $end
$var wire 9 0 dout [8:0] $end
$var reg 9 1 dout_r [8:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 8 2 din_a [7:0] $end
$var wire 8 3 din_b [7:0] $end
$var wire 9 4 dout [8:0] $end
$var reg 9 5 dout_r [8:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 8 6 din_a [7:0] $end
$var wire 8 7 din_b [7:0] $end
$var wire 9 8 dout [8:0] $end
$var reg 9 9 dout_r [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder_tree_inst $end
$var wire 1 " clk $end
$var wire 36 : din [35:0] $end
$var wire 11 ; dout [10:0] $end
$scope begin genblk2 $end
$var wire 20 < result [19:0] $end
$scope module add_pairs_inst $end
$var wire 1 " clk $end
$var wire 36 = din [35:0] $end
$var wire 20 > dout [19:0] $end
$scope begin genblk1[0] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 9 ? din_a [8:0] $end
$var wire 9 @ din_b [8:0] $end
$var wire 10 A dout [9:0] $end
$var reg 10 B dout_r [9:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 9 C din_a [8:0] $end
$var wire 9 D din_b [8:0] $end
$var wire 10 E dout [9:0] $end
$var reg 10 F dout_r [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder_tree_inst $end
$var wire 1 " clk $end
$var wire 20 G din [19:0] $end
$var wire 11 H dout [10:0] $end
$scope begin genblk1 $end
$scope module add_inst $end
$var wire 1 " clk $end
$var wire 10 I din_a [9:0] $end
$var wire 10 J din_b [9:0] $end
$var wire 11 K dout [10:0] $end
$var reg 11 L dout_r [10:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
bx D
bx C
b0 B
b0 A
bx @
bx ?
b0 >
bx =
b0 <
b0 ;
bx :
bx 9
bx 8
b101 7
b101 6
bx 5
bx 4
b101 3
b101 2
bx 1
bx 0
b101 /
b101 .
bx -
bx ,
b101 +
b101 *
bx )
b10100000101000001010000010100000101000001010000010100000101 (
bx '
b0 &
b10100000101000001010000010100000101000001010000010100000101 %
bx $
b10100000101000001010000010100000101000001010000010100000101 #
1"
b0 !
$end
#5
0"
#10
bx J
bx I
b0 D
b0 C
b0 @
b0 ?
bx E
bx F
bx <
bx >
bx G
bx A
bx B
b0 8
b0 9
b0 4
b0 5
b0 0
b0 1
b0 '
b0 )
b0 :
b0 =
b0 ,
b0 -
b0 *
b0 +
b0 .
b0 /
b0 2
b0 3
b0 6
b0 7
1"
b0 #
b0 %
b0 (
b0 $
#15
0"
#20
b10 ?
b10 @
b10 C
b10 D
b0 I
b0 J
b10 ,
b10 -
b10 0
b10 1
b10 4
b10 5
b10000000010000000010000000010 '
b10000000010000000010000000010 )
b10000000010000000010000000010 :
b10000000010000000010000000010 =
b10 8
b10 9
b0 A
b0 B
b0 <
b0 >
b0 G
b0 E
b0 F
bx !
bx &
bx ;
bx H
bx K
bx L
b1 *
b1 +
b1 .
b1 /
b1 2
b1 3
b1 6
b1 7
1"
b100000001000000010000000100000001000000010000000100000001 #
b100000001000000010000000100000001000000010000000100000001 %
b100000001000000010000000100000001000000010000000100000001 (
b1 $
#25
0"
#30
b100 J
b100 I
b100 D
b100 C
b100 @
b100 ?
b0 !
b0 &
b0 ;
b0 H
b0 K
b0 L
b100 E
b100 F
b1000000000100 <
b1000000000100 >
b1000000000100 G
b100 A
b100 B
b100 8
b100 9
b100 4
b100 5
b100 0
b100 1
b100000000100000000100000000100 '
b100000000100000000100000000100 )
b100000000100000000100000000100 :
b100000000100000000100000000100 =
b100 ,
b100 -
b10 *
b10 +
b10 .
b10 /
b10 2
b10 3
b10 6
b10 7
1"
b1000000010000000100000001000000010000000100000001000000010 #
b1000000010000000100000001000000010000000100000001000000010 %
b1000000010000000100000001000000010000000100000001000000010 (
b10 $
#35
0"
#40
b110 ?
b110 @
b110 C
b110 D
b1000 I
b1000 J
b110 ,
b110 -
b110 0
b110 1
b110 4
b110 5
b110000000110000000110000000110 '
b110000000110000000110000000110 )
b110000000110000000110000000110 :
b110000000110000000110000000110 =
b110 8
b110 9
b1000 A
b1000 B
b10000000001000 <
b10000000001000 >
b10000000001000 G
b1000 E
b1000 F
b1000 !
b1000 &
b1000 ;
b1000 H
b1000 K
b1000 L
b11 *
b11 +
b11 .
b11 /
b11 2
b11 3
b11 6
b11 7
1"
b1100000011000000110000001100000011000000110000001100000011 #
b1100000011000000110000001100000011000000110000001100000011 %
b1100000011000000110000001100000011000000110000001100000011 (
b11 $
#45
0"
#50
b1100 J
b1100 I
b1000 D
b1000 C
b1000 @
b1000 ?
b10000 !
b10000 &
b10000 ;
b10000 H
b10000 K
b10000 L
b1100 E
b1100 F
b11000000001100 <
b11000000001100 >
b11000000001100 G
b1100 A
b1100 B
b1000 8
b1000 9
b1000 4
b1000 5
b1000 0
b1000 1
b1000000001000000001000000001000 '
b1000000001000000001000000001000 )
b1000000001000000001000000001000 :
b1000000001000000001000000001000 =
b1000 ,
b1000 -
b100 *
b100 +
b100 .
b100 /
b100 2
b100 3
b100 6
b100 7
1"
b10000000100000001000000010000000100000001000000010000000100 #
b10000000100000001000000010000000100000001000000010000000100 %
b10000000100000001000000010000000100000001000000010000000100 (
b100 $
#55
0"
#60
b1010 ?
b1010 @
b1010 C
b1010 D
b10000 I
b10000 J
b1010 ,
b1010 -
b1010 0
b1010 1
b1010 4
b1010 5
b1010000001010000001010000001010 '
b1010000001010000001010000001010 )
b1010000001010000001010000001010 :
b1010000001010000001010000001010 =
b1010 8
b1010 9
b10000 A
b10000 B
b100000000010000 <
b100000000010000 >
b100000000010000 G
b10000 E
b10000 F
b11000 !
b11000 &
b11000 ;
b11000 H
b11000 K
b11000 L
b101 *
b101 +
b101 .
b101 /
b101 2
b101 3
b101 6
b101 7
1"
b10100000101000001010000010100000101000001010000010100000101 #
b10100000101000001010000010100000101000001010000010100000101 %
b10100000101000001010000010100000101000001010000010100000101 (
b101 $
#65
0"
#70
b10100 J
b10100 I
b1100 D
b1100 C
b1100 @
b1100 ?
b100000 !
b100000 &
b100000 ;
b100000 H
b100000 K
b100000 L
b10100 E
b10100 F
b101000000010100 <
b101000000010100 >
b101000000010100 G
b10100 A
b10100 B
b1100 8
b1100 9
b1100 4
b1100 5
b1100 0
b1100 1
b1100000001100000001100000001100 '
b1100000001100000001100000001100 )
b1100000001100000001100000001100 :
b1100000001100000001100000001100 =
b1100 ,
b1100 -
b110 *
b110 +
b110 .
b110 /
b110 2
b110 3
b110 6
b110 7
1"
b11000000110000001100000011000000110000001100000011000000110 #
b11000000110000001100000011000000110000001100000011000000110 %
b11000000110000001100000011000000110000001100000011000000110 (
b110 $
#75
0"
#80
b1110 ?
b1110 @
b1110 C
b1110 D
b11000 I
b11000 J
b1110 ,
b1110 -
b1110 0
b1110 1
b1110 4
b1110 5
b1110000001110000001110000001110 '
b1110000001110000001110000001110 )
b1110000001110000001110000001110 :
b1110000001110000001110000001110 =
b1110 8
b1110 9
b11000 A
b11000 B
b110000000011000 <
b110000000011000 >
b110000000011000 G
b11000 E
b11000 F
b101000 !
b101000 &
b101000 ;
b101000 H
b101000 K
b101000 L
b111 *
b111 +
b111 .
b111 /
b111 2
b111 3
b111 6
b111 7
1"
b11100000111000001110000011100000111000001110000011100000111 #
b11100000111000001110000011100000111000001110000011100000111 %
b11100000111000001110000011100000111000001110000011100000111 (
b111 $
#85
0"
#90
b11100 J
b11100 I
b10000 D
b10000 C
b10000 @
b10000 ?
b110000 !
b110000 &
b110000 ;
b110000 H
b110000 K
b110000 L
b11100 E
b11100 F
b111000000011100 <
b111000000011100 >
b111000000011100 G
b11100 A
b11100 B
b10000 8
b10000 9
b10000 4
b10000 5
b10000 0
b10000 1
b10000000010000000010000000010000 '
b10000000010000000010000000010000 )
b10000000010000000010000000010000 :
b10000000010000000010000000010000 =
b10000 ,
b10000 -
b1000 *
b1000 +
b1000 .
b1000 /
b1000 2
b1000 3
b1000 6
b1000 7
1"
b100000001000000010000000100000001000000010000000100000001000 #
b100000001000000010000000100000001000000010000000100000001000 %
b100000001000000010000000100000001000000010000000100000001000 (
b1000 $
#95
0"
#100
b10010 ?
b10010 @
b10010 C
b10010 D
b100000 I
b100000 J
b10010 ,
b10010 -
b10010 0
b10010 1
b10010 4
b10010 5
b10010000010010000010010000010010 '
b10010000010010000010010000010010 )
b10010000010010000010010000010010 :
b10010000010010000010010000010010 =
b10010 8
b10010 9
b100000 A
b100000 B
b1000000000100000 <
b1000000000100000 >
b1000000000100000 G
b100000 E
b100000 F
b111000 !
b111000 &
b111000 ;
b111000 H
b111000 K
b111000 L
b1001 *
b1001 +
b1001 .
b1001 /
b1001 2
b1001 3
b1001 6
b1001 7
1"
b100100001001000010010000100100001001000010010000100100001001 #
b100100001001000010010000100100001001000010010000100100001001 %
b100100001001000010010000100100001001000010010000100100001001 (
b1001 $
#105
0"
#110
b100100 J
b100100 I
b10100 D
b10100 C
b10100 @
b10100 ?
b1000000 !
b1000000 &
b1000000 ;
b1000000 H
b1000000 K
b1000000 L
b100100 E
b100100 F
b1001000000100100 <
b1001000000100100 >
b1001000000100100 G
b100100 A
b100100 B
b10100 8
b10100 9
b10100 4
b10100 5
b10100 0
b10100 1
b10100000010100000010100000010100 '
b10100000010100000010100000010100 )
b10100000010100000010100000010100 :
b10100000010100000010100000010100 =
b10100 ,
b10100 -
b1010 *
b1010 +
b1010 .
b1010 /
b1010 2
b1010 3
b1010 6
b1010 7
1"
b101000001010000010100000101000001010000010100000101000001010 #
b101000001010000010100000101000001010000010100000101000001010 %
b101000001010000010100000101000001010000010100000101000001010 (
b1010 $
#115
0"
#120
b10110 ?
b10110 @
b10110 C
b10110 D
b101000 I
b101000 J
b10110 ,
b10110 -
b10110 0
b10110 1
b10110 4
b10110 5
b10110000010110000010110000010110 '
b10110000010110000010110000010110 )
b10110000010110000010110000010110 :
b10110000010110000010110000010110 =
b10110 8
b10110 9
b101000 A
b101000 B
b1010000000101000 <
b1010000000101000 >
b1010000000101000 G
b101000 E
b101000 F
b1001000 !
b1001000 &
b1001000 ;
b1001000 H
b1001000 K
b1001000 L
b1011 *
b1011 +
b1011 .
b1011 /
b1011 2
b1011 3
b1011 6
b1011 7
1"
b101100001011000010110000101100001011000010110000101100001011 #
b101100001011000010110000101100001011000010110000101100001011 %
b101100001011000010110000101100001011000010110000101100001011 (
b1011 $
#125
0"
#130
b101100 J
b101100 I
b11000 D
b11000 C
b11000 @
b11000 ?
b1010000 !
b1010000 &
b1010000 ;
b1010000 H
b1010000 K
b1010000 L
b101100 E
b101100 F
b1011000000101100 <
b1011000000101100 >
b1011000000101100 G
b101100 A
b101100 B
b11000 8
b11000 9
b11000 4
b11000 5
b11000 0
b11000 1
b11000000011000000011000000011000 '
b11000000011000000011000000011000 )
b11000000011000000011000000011000 :
b11000000011000000011000000011000 =
b11000 ,
b11000 -
b1100 *
b1100 +
b1100 .
b1100 /
b1100 2
b1100 3
b1100 6
b1100 7
1"
b110000001100000011000000110000001100000011000000110000001100 #
b110000001100000011000000110000001100000011000000110000001100 %
b110000001100000011000000110000001100000011000000110000001100 (
b1100 $
#135
0"
#140
b11010 ?
b11010 @
b11010 C
b11010 D
b110000 I
b110000 J
b11010 ,
b11010 -
b11010 0
b11010 1
b11010 4
b11010 5
b11010000011010000011010000011010 '
b11010000011010000011010000011010 )
b11010000011010000011010000011010 :
b11010000011010000011010000011010 =
b11010 8
b11010 9
b110000 A
b110000 B
b1100000000110000 <
b1100000000110000 >
b1100000000110000 G
b110000 E
b110000 F
b1011000 !
b1011000 &
b1011000 ;
b1011000 H
b1011000 K
b1011000 L
b1101 *
b1101 +
b1101 .
b1101 /
b1101 2
b1101 3
b1101 6
b1101 7
1"
b110100001101000011010000110100001101000011010000110100001101 #
b110100001101000011010000110100001101000011010000110100001101 %
b110100001101000011010000110100001101000011010000110100001101 (
b1101 $
#145
0"
#150
b110100 J
b110100 I
b11100 D
b11100 C
b11100 @
b11100 ?
b1100000 !
b1100000 &
b1100000 ;
b1100000 H
b1100000 K
b1100000 L
b110100 E
b110100 F
b1101000000110100 <
b1101000000110100 >
b1101000000110100 G
b110100 A
b110100 B
b11100 8
b11100 9
b11100 4
b11100 5
b11100 0
b11100 1
b11100000011100000011100000011100 '
b11100000011100000011100000011100 )
b11100000011100000011100000011100 :
b11100000011100000011100000011100 =
b11100 ,
b11100 -
b1110 *
b1110 +
b1110 .
b1110 /
b1110 2
b1110 3
b1110 6
b1110 7
1"
b111000001110000011100000111000001110000011100000111000001110 #
b111000001110000011100000111000001110000011100000111000001110 %
b111000001110000011100000111000001110000011100000111000001110 (
b1110 $
#155
0"
#160
b11110 ?
b11110 @
b11110 C
b11110 D
b111000 I
b111000 J
b11110 ,
b11110 -
b11110 0
b11110 1
b11110 4
b11110 5
b11110000011110000011110000011110 '
b11110000011110000011110000011110 )
b11110000011110000011110000011110 :
b11110000011110000011110000011110 =
b11110 8
b11110 9
b111000 A
b111000 B
b1110000000111000 <
b1110000000111000 >
b1110000000111000 G
b111000 E
b111000 F
b1101000 !
b1101000 &
b1101000 ;
b1101000 H
b1101000 K
b1101000 L
b1111 *
b1111 +
b1111 .
b1111 /
b1111 2
b1111 3
b1111 6
b1111 7
1"
b111100001111000011110000111100001111000011110000111100001111 #
b111100001111000011110000111100001111000011110000111100001111 %
b111100001111000011110000111100001111000011110000111100001111 (
b1111 $
#165
0"
#170
b111100 J
b111100 I
b100000 D
b100000 C
b100000 @
b100000 ?
b1110000 !
b1110000 &
b1110000 ;
b1110000 H
b1110000 K
b1110000 L
b111100 E
b111100 F
b1111000000111100 <
b1111000000111100 >
b1111000000111100 G
b111100 A
b111100 B
b100000 8
b100000 9
b100000 4
b100000 5
b100000 0
b100000 1
b100000000100000000100000000100000 '
b100000000100000000100000000100000 )
b100000000100000000100000000100000 :
b100000000100000000100000000100000 =
b100000 ,
b100000 -
b10000 *
b10000 +
b10000 .
b10000 /
b10000 2
b10000 3
b10000 6
b10000 7
1"
b1000000010000000100000001000000010000000100000001000000010000 #
b1000000010000000100000001000000010000000100000001000000010000 %
b1000000010000000100000001000000010000000100000001000000010000 (
b10000 $
#175
0"
#180
b100010 ?
b100010 @
b100010 C
b100010 D
b1000000 I
b1000000 J
b100010 ,
b100010 -
b100010 0
b100010 1
b100010 4
b100010 5
b100010000100010000100010000100010 '
b100010000100010000100010000100010 )
b100010000100010000100010000100010 :
b100010000100010000100010000100010 =
b100010 8
b100010 9
b1000000 A
b1000000 B
b10000000001000000 <
b10000000001000000 >
b10000000001000000 G
b1000000 E
b1000000 F
b1111000 !
b1111000 &
b1111000 ;
b1111000 H
b1111000 K
b1111000 L
b10001 *
b10001 +
b10001 .
b10001 /
b10001 2
b10001 3
b10001 6
b10001 7
1"
b1000100010001000100010001000100010001000100010001000100010001 #
b1000100010001000100010001000100010001000100010001000100010001 %
b1000100010001000100010001000100010001000100010001000100010001 (
b10001 $
#185
0"
#190
b1000100 J
b1000100 I
b100100 D
b100100 C
b100100 @
b100100 ?
b10000000 !
b10000000 &
b10000000 ;
b10000000 H
b10000000 K
b10000000 L
b1000100 E
b1000100 F
b10001000001000100 <
b10001000001000100 >
b10001000001000100 G
b1000100 A
b1000100 B
b100100 8
b100100 9
b100100 4
b100100 5
b100100 0
b100100 1
b100100000100100000100100000100100 '
b100100000100100000100100000100100 )
b100100000100100000100100000100100 :
b100100000100100000100100000100100 =
b100100 ,
b100100 -
b10010 *
b10010 +
b10010 .
b10010 /
b10010 2
b10010 3
b10010 6
b10010 7
1"
b1001000010010000100100001001000010010000100100001001000010010 #
b1001000010010000100100001001000010010000100100001001000010010 %
b1001000010010000100100001001000010010000100100001001000010010 (
b10010 $
#195
0"
#200
b100110 ?
b100110 @
b100110 C
b100110 D
b1001000 I
b1001000 J
b100110 ,
b100110 -
b100110 0
b100110 1
b100110 4
b100110 5
b100110000100110000100110000100110 '
b100110000100110000100110000100110 )
b100110000100110000100110000100110 :
b100110000100110000100110000100110 =
b100110 8
b100110 9
b1001000 A
b1001000 B
b10010000001001000 <
b10010000001001000 >
b10010000001001000 G
b1001000 E
b1001000 F
b10001000 !
b10001000 &
b10001000 ;
b10001000 H
b10001000 K
b10001000 L
b10011 *
b10011 +
b10011 .
b10011 /
b10011 2
b10011 3
b10011 6
b10011 7
1"
b1001100010011000100110001001100010011000100110001001100010011 #
b1001100010011000100110001001100010011000100110001001100010011 %
b1001100010011000100110001001100010011000100110001001100010011 (
b10011 $
#205
0"
#210
b1001100 J
b1001100 I
b10010000 !
b10010000 &
b10010000 ;
b10010000 H
b10010000 K
b10010000 L
b1001100 E
b1001100 F
b10011000001001100 <
b10011000001001100 >
b10011000001001100 G
b1001100 A
b1001100 B
1"
b10100 $
